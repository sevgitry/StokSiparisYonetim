@model List<EntityLayer.DTOs.User.UserResponseDto>
@{
    ViewData["Title"] = "Kullanıcı Yönetimi";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1">
                        <i class="fas fa-users me-2 text-success"></i>Kullanıcı Yönetimi
                    </h1>
                    <p class="text-muted">Sistem kullanıcılarını görüntüle ve yönet</p>
                </div>
                <div>
                    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addUserModal">
                        <i class="fas fa-user-plus me-2"></i>Yeni Kullanıcı
                    </button>
                    <a href="@Url.Action("Index", "Admin")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Geri
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Alert Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Users Table -->
    <div class="card">
        <div class="card-header bg-light">
            <h5 class="card-title mb-0">
                <i class="fas fa-list me-2"></i>Kullanıcı Listesi (@Model.Count kullanıcı)
            </h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Ad Soyad</th>
                            <th>Email</th>
                            <th>Rol</th>
                            <th>Durum</th>
                            <th>Kayıt Tarihi</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td>
                                    <strong>@user.Name</strong>
                                </td>
                                <td>@user.Email</td>
                                <td>
                                    <span class="badge @GetRoleBadgeClass(user.RolId)">
                                        @user.RoleName
                                    </span>
                                </td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(user.Status)">
                                        @user.StatusText
                                    </span>
                                </td>
                                <td>@user.CreatedDate.ToString("dd.MM.yyyy HH:mm")</td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button class="btn btn-outline-primary"
                                                onclick="editUser(@user.Id)"
                                                data-bs-toggle="tooltip" title="Düzenle">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-outline-warning"
                                                onclick="toggleUserStatus(@user.Id, @user.Status)"
                                                data-bs-toggle="tooltip" title='@(user.Status == 1 ? "Pasif Yap" : "Aktif Yap")'>
                                            <i class="fas @(user.Status == 1 ? "fa-pause" : "fa-play")"></i>
                                        </button>
                                        @if (user.RolId != 1) // Admin kullanıcıyı silme
                                        {
                                            <button class="btn btn-outline-danger"
                                                    onclick="deleteUser(@user.Id, '@user.Name')"
                                                    data-bs-toggle="tooltip" title="Sil">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">
                    <i class="fas fa-user-plus me-2"></i>Yeni Kullanıcı
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-action="CreateUser">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-12 mb-3">
                            <label class="form-label">Ad Soyad *</label>
                            <input type="text" class="form-control" name="Name" required>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Email *</label>
                            <input type="email" class="form-control" name="Email" required>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Şifre *</label>
                            <input type="password" class="form-control" name="Password" required>
                        </div>
                        
                        <div class="col-12 mb-3">
                            <label class="form-label">Durum *</label>
                            <select class="form-select" name="Status" required>
                                <option value="1" selected>Aktif</option>
                                <option value="0">Pasif</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-success">Kullanıcı Ekle</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-edit me-2"></i>Kullanıcı Düzenle
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-action="UpdateUser" id="editUserForm">
                <input type="hidden" name="Id" id="editUserId">
                <input type="hidden" name="RowVersion" id="editRowVersion">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-12 mb-3">
                            <label class="form-label">Ad Soyad *</label>
                            <input type="text" class="form-control" name="Name" id="editName" required>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Email *</label>
                            <input type="email" class="form-control" name="Email" id="editEmail" required>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Şifre</label>
                            <input type="password" class="form-control" name="Password" id="editPassword" placeholder="Değiştirmek istemiyorsanız boş bırakın">
                        </div>
                        
                        <div class="col-12 mb-3">
                            <label class="form-label">Durum *</label>
                            <select class="form-select" name="Status" id="editStatus" required>
                                <option value="1">Aktif</option>
                                <option value="0">Pasif</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-primary">Güncelle</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Tooltip'leri aktif et
        $(function () {
            $('[data-bs-toggle="tooltip"]').tooltip();
        });

        // Kullanıcı düzenle
        function editUser(userId) {
            // AJAX ile kullanıcı bilgilerini getir
            $.get('@Url.Action("GetUser", "Admin")', { id: userId }, function(response) {
                if (response.success) {
                    const user = response;
                    $('#editUserId').val(user.id);
                    $('#editName').val(user.name);
                    $('#editEmail').val(user.email);
                    $('#editRolId').val(user.rolId);
                    $('#editStatus').val(user.status);
                    $('#editRowVersion').val(user.rowVersion);

                    $('#editUserModal').modal('show');
                } else {
                    alert('Kullanıcı bilgileri yüklenirken hata oluştu: ' + response.message);
                }
            }).fail(function() {
                alert('Kullanıcı bilgileri yüklenirken hata oluştu!');
            });
        }

        // Kullanıcı durumunu değiştir
        function toggleUserStatus(userId, currentStatus) {
            const newStatus = currentStatus === 1 ? 0 : 1;
            const action = currentStatus === 1 ? 'pasif yapmak' : 'aktif yapmak';

            if (confirm(`Bu kullanıcıyı ${action} istediğinizden emin misiniz?`)) {
                // AJAX ile durum değiştirme
                $.post('@Url.Action("ToggleUserStatus", "Admin")', {
                    id: userId,
                    status: newStatus
                }, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('İşlem başarısız: ' + response.message);
                    }
                });
            }
        }

        // Kullanıcı sil
        function deleteUser(userId, name) {
            if (confirm(`"${name}" kullanıcısını silmek istediğinizden emin misiniz?`)) {
                $.post('@Url.Action("DeleteUser", "Admin")', { id: userId }, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Silme işlemi başarısız: ' + response.message);
                    }
                });
            }
        }

        // Edit form submit
        $('#editUserForm').on('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);

            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        $('#editUserModal').modal('hide');
                        location.reload();
                    } else {
                        alert('Güncelleme başarısız: ' + response.message);
                    }
                },
                error: function() {
                    alert('Güncelleme sırasında hata oluştu!');
                }
            });
        });
    </script>
}

@functions {
    public string GetStatusBadgeClass(int status)
    {
        return status switch
        {
            1 => "bg-success", // Aktif
            0 => "bg-danger",  // Pasif
            _ => "bg-secondary"
        };
    }

    public string GetRoleBadgeClass(int rolId)
    {
        return rolId switch
        {
            1 => "bg-primary",   // Admin
            2 => "bg-secondary", // Kullanıcı
            3 => "bg-info",      // Editör
            4 => "bg-warning",   // Moderator
            _ => "bg-dark"
        };
    }
}