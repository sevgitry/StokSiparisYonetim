@model StokSiparisYonetim.Controllers.ProductOrderViewModel

@{
    ViewData["Title"] = "Sipariş Oluştur";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-cart-plus me-2"></i>Sipariş Oluştur
                    </h4>
                </div>
                <div class="card-body">
                    <!-- Alert Messages -->
                    

                    <!-- Product Info -->
                    <div class="product-info mb-4 p-3 border rounded bg-light">
                        <h5 class="text-primary">@Model.Product.ProductName</h5>
                        <div class="row">
                            <div class="col-md-6">
                                <p class="mb-1"><strong>
                                    ş Fiyatı:</strong> @Model.Product.SellPrice.ToString("C2")</p>
                                <p class="mb-1"><strong>Alış Fiyatı:</strong> @Model.Product.PurchasePrice.ToString("C2")</p>
                            </div>
                            <div class="col-md-6">
                                <p class="mb-1">
                                    <strong>Mevcut Stok:</strong>
                                    <span class="badge @GetStockBadgeClass(Model.Product.Amount)">
                                        @Model.Product.Amount
                                    </span>
                                </p>
                                <p class="mb-1"><strong>Kategori:</strong> @Model.Product.CategoryName</p>
                            </div>
                        </div>
                    </div>

                    <!-- Order Form -->
                    <form asp-action="CreateOrder" method="post">
                        <input type="hidden" asp-for="Product.Id" />
                        <input type="hidden" asp-for="Product.ProductName" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerId" class="form-label">Müşteri</label>
                                    <select asp-for="CustomerId" class="form-select" required>
                                        <option value="">Müşteri Seçin</option>
                                        @foreach (var customer in ViewBag.Customers)
                                        {
                                            <option value="@customer.Id">@customer.Name</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Quantity" class="form-label">Miktar</label>
                                    <input asp-for="Quantity" class="form-control"
                                           min="1" max="@Model.Product.Amount"
                                           oninput="calculateTotal()" />
                                    <small class="form-text text-muted">
                                        Maksimum: @Model.Product.Amount adet
                                    </small>
                                    <span asp-validation-for="Quantity" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Order Summary -->
                        <div class="order-summary mb-4 p-3 border rounded bg-info bg-opacity-10">
                            <h6 class="text-info">Sipariş Özeti</h6>
                            <div class="row">
                                <div class="col-md-6">
                                    <p class="mb-1"><strong>Birim Fiyat:</strong> <span id="unitPrice">@Model.Product.SellPrice.ToString("C2")</span></p>
                                    <p class="mb-1"><strong>Miktar:</strong> <span id="displayQuantity">@Model.Quantity</span> adet</p>
                                </div>
                                <div class="col-md-6">
                                    <p class="mb-1"><strong>Toplam Tutar:</strong> <span id="totalAmount" class="fw-bold text-success">@((Model.Product.SellPrice * Model.Quantity).ToString("C2"))</span></p>
                                </div>
                            </div>
                        </div>

                        <!-- Buttons -->
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-success flex-fill">
                                <i class="fas fa-check me-2"></i>Siparişi Oluştur
                            </button>
                            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                                <i class="fas fa-times me-2"></i>İptal
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function calculateTotal() {
            const quantity = document.getElementById('Quantity').value;
            const unitPrice = @Model.Product.SellPrice;
            const totalAmount = quantity * unitPrice;

            document.getElementById('displayQuantity').textContent = quantity;
            document.getElementById('totalAmount').textContent = formatCurrency(totalAmount);
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('tr-TR', {
                style: 'currency',
                currency: 'TRY'
            }).format(amount);
        }

        // Sayfa yüklendiğinde ve miktar değiştiğinde toplamı hesapla
        document.addEventListener('DOMContentLoaded', function() {
            calculateTotal();
            document.getElementById('Quantity').addEventListener('input', calculateTotal);
        });
    </script>
}

@functions {
    public string GetStockBadgeClass(int amount)
    {
        if (amount == 0) return "bg-danger";
        if (amount <= 5) return "bg-warning";
        if (amount <= 10) return "bg-info";
        return "bg-success";
    }
}